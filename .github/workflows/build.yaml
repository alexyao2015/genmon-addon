name: Docker Build

on:
  push:
  pull_request:
  schedule:
    - cron: '0 0 * * *'

jobs:
  getversion:
    runs-on: ubuntu-latest
    name: Obtain Genmon Version
    outputs:
      build-version: ${{ steps.set-version.outputs.build_version }}
      build-required: ${{ steps.set-version.outputs.build_required }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get Genmon Build Version
        id: set-version
        run: |
          GENMON_VERSION_LATEST=$(wget \
            -qO - https://api.github.com/repos/jgyates/genmon/commits/master \
            | awk '/sha/{print $4;exit}' FS='[""]')
          GENMON_VERSION_LAST_BUILT="$(jq '.version' genmon/config.json --raw-output)"

          if [ $GENMON_VERSION_LATEST == "" ] || [ $GENMON_VERSION_LATEST == $GENMON_VERSION_LAST_BUILT ]; then
            NEED_BUILD=false
          else
            NEED_BUILD=true
          fi
          echo "build_version=${GENMON_VERSION_LATEST}" >> $GITHUB_OUTPUT
          echo "build_required=${NEED_BUILD}" >> $GITHUB_OUTPUT
          echo Last built version: ${GENMON_VERSION_LAST_BUILT}
          echo Latest build version: ${GENMON_VERSION_LATEST}
          echo Build required: ${NEED_BUILD}

  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: getversion
    if: ${{ needs.getversion.outputs.build-required == 'true' || github.event_name == 'push' }}
    env:
      GENMON_VERSION: ${{ needs.getversion.outputs.build-version }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: |
            env.BUILDKIT_STEP_LOG_MAX_SIZE=10000000
            env.BUILDKIT_STEP_LOG_MAX_SPEED=100000000
          install: true

      - name: Cache Docker layers
        uses: actions/cache@v3
        continue-on-error: true
        with:
          path: /tmp/.buildx-cache
          key: ${{ env.GENMON_VERSION }}-${{ github.sha }}
          restore-keys: |
            ${{ env.GENMON_VERSION }}-

      - name: Build
        run: |
          set -x
          docker build \
            --build-arg GENMON_VERSION=${{ env.GENMON_VERSION }} \
            --tag ci:${{ github.run_number }} \
            --progress plain \
            --file ./genmon/Dockerfile \
            --cache-from type=local,src=/tmp/.buildx-cache \
            --cache-to type=local,dest=/tmp/.buildx-cache-new \
            --load \
            .
      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
      - name: Inspect
        run: |
          set -x
          docker image inspect ci:${{ github.run_number }}
      - name: Save tarball
        run: |
          set -x
          docker save ci:${{ github.run_number }} | gzip > ci-${{ github.run_number }}.tar.gz
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ci-${{ github.run_number }}
          path: ci-${{ github.run_number }}.tar.gz

  publish:
    name: Publish Image
    runs-on: ubuntu-latest
    needs:
      - getversion
      - build
    if: ${{ !startsWith(github.ref, 'refs/pull/') && !startsWith(github.ref, 'refs/heads/dependabot/') }}
    env:
      GENMON_VERSION: ${{ needs.getversion.outputs.build-version }}
    strategy:
      matrix:
        registry:
          - {
            url: ghcr.io/alexyao2015,
            username: GCHR_USERNAME,
            password: GHCR_PAT,
            repo: ghcr.io/alexyao2015/genmon-addon
          }
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download container artifact
        uses: actions/download-artifact@v3
        with:
          name: ci-${{ github.run_number }}

      - name: Import image
        run: |
          docker load --input ci-${{ github.run_number }}.tar.gz
      - name: Docker login
        run: |
          docker login ${{ matrix.registry.url }} -u ${{ secrets[matrix.registry.username] }} -p ${{ secrets[matrix.registry.password] }}

      - name: Push image (run number)
        run: |
          set -x
          docker tag ci:${{ github.run_number }} ${{ matrix.registry.repo }}:${{ github.run_number }}
          docker push ${{ matrix.registry.repo }}:${{ github.run_number }}

      - name: Push image (version)
        run: |
          set -x
          docker tag ci:${{ github.run_number }} ${{ matrix.registry.repo }}:${{ env.GENMON_VERSION }}
          docker push ${{ matrix.registry.repo }}:${{ env.GENMON_VERSION }}

  commit:
    name: Commit Version
    runs-on: ubuntu-latest
    needs:
      - getversion
      - build
      - publish
    env:
      GENMON_VERSION: ${{ needs.getversion.outputs.build-version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Save Version Number
        run: |
          jq '.version = "${{ env.GENMON_VERSION }}"' genmon/config.json > genmon/config.json.tmp
          mv genmon/config.json.tmp genmon/config.json
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git add .
          git commit -m "Genmon Version Update"
          git push
